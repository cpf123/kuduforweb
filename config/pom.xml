<?xml version="1.0" encoding="UTF-8"?>


<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.platform</groupId>
        <artifactId>platform_parent</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>platform_config</artifactId>


    <description>platform 配置中心，基于spring cloud config</description>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-server</artifactId>
            <version>2.0.1.RELEASE</version>
        </dependency>
        <!--SpringCloudBus依赖-->
        <!--这时候我们就不要忘记消息队列的发布订阅模型。让所有为服务来订阅这个事件，当这个事件发生改变了，就可以通知所有微服务去更新它们的内存中的配置信息。这时Bus消息总线就能解决，你只需要在springcloud Config Server端发出refresh，就可以触发所有微服务更新了。-->
        <!--<dependency>-->
            <!--<groupId>org.springframework.cloud</groupId>-->
            <!--<artifactId>spring-cloud-bus</artifactId>-->
            <!--<version>2.0.0.RELEASE</version>-->
        <!--</dependency>-->
        <!--&lt;!&ndash; 消息总线整合bus 依赖 RabbitMQ&ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>org.springframework.cloud</groupId>-->
            <!--<artifactId>spring-cloud-stream-binder-rabbit</artifactId>-->
            <!--<version>2.0.1.RELEASE</version>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
            <!--<version>2.0.1.RELEASE</version>-->
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.12</version>
            </plugin>
        </plugins>
    </build>
    <!--<build>-->
        <!--<plugins>-->
            <!--<plugin>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-maven-plugin</artifactId>-->
            <!--</plugin>-->
            <!--<plugin>-->
                <!--<groupId>com.spotify</groupId>-->
                <!--<artifactId>docker-maven-plugin</artifactId>-->
                <!--<version>0.4.13</version>-->
                <!--<configuration>-->
                    <!--<imageName>10.211.55.4:5000/${project.artifactId}:${project.version}-->
                    <!--</imageName>-->
                    <!--<baseImage>jdk1.8</baseImage>-->
                    <!--<entryPoint>["java","-jar","/${project.build.finalName}.jar"]</entryPoint>-->
                    <!--<resources>-->
                        <!--<resource>-->
                            <!--<targetPath>/</targetPath>-->
                            <!--<directory>${project.build.directory}-->
                            <!--</directory>-->
                            <!--<include>${project.build.finalName}.jar</include>-->
                        <!--</resource>-->
                    <!--</resources>-->
                    <!--<dockerHost>http://10.211.55.4:2375</dockerHost>-->
                <!--</configuration>-->
            <!--</plugin>-->
        <!--</plugins>-->
    <!--</build>-->

</project>
